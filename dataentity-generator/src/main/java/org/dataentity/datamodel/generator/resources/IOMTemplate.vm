## This is an the velocity template
## to generate a Java class
// Generated by IOMVelocityExporter

import java.util.*;

public abstract class $class.Name {

#foreach( $att in $class.Attributes )	
#set($javaType = $utility.getJavaType($att.Type))
	// $att.Name
	private $javaType $att.Name;
	public $javaType get$utility.firstToUpperCase($att.Name)() {
		return this.$att.Name;
	}	
	public void set$utility.firstToUpperCase($att.Name)($javaType $att.Name) {
		this.$att.Name = $att.Name;
	}

#end

#set($associations = $class.getMyAssociations())
#foreach( $assoc in $associations )
	#if($assoc.getStartRole().getClassInvolved()==$class)
	  #set($role=$assoc.getEndRole())
	#else
		#set($role=$assoc.getStartRole())
	#end
	#set($targetClass=$role.getClassInvolved().Name)
	#set($paramClass=$utility.firstToLowerCase($targetClass))
	
	#if($role.isNavigable())
	
	// Association
	// $class.getName() -- $targetClass
	// Navigable   : $role.isNavigable()
	// Multiplicity: $role.getMultiplicity()
	
		#if($role.Multiplicity=="1")
	
	public abstract $targetClass get$targetClass();
	public abstract void set$targetClass($targetClass $paramClass);
		#else
	
	public abstract ArrayList getAll$targetClass();
	public abstract void add$targetClass($targetClass $paramClass);
		#end
	#end
#end	

}

